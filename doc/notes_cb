###############################################################################
# ISSUES
###############################################################################

Since log.py is run by root, the data directory, if created automatically, will
belong to root.

External bug: Every one of the following scapy imports produces a warning:

    $ python
    >>> from scapy.all import load_module
    WARNING: No route found for IPv6 destination :: (no default route?)

    $ python
    >>> from scapy.all import sniff
    WARNING: No route found for IPv6 destination :: (no default route?)

    $ python
    >>> from scapy.all import Dot11
    WARNING: No route found for IPv6 destination :: (no default route?)


###############################################################################
# TODO
###############################################################################

log.py
    how / under which conditions is it possible to log date/time
    maybe, if possible, turn sniff function inside out (manage main loop)
    maybe import logging instead of print
    what else is in the scapy packets (==> application ideas)
    set up distributed logging concept with sql databases
.gitignore
decode mac addresses (which vendor, which model)
[personal] get and learn meld (git mergetool)
further topics: grep -r TODO


###############################################################################
# Requirements for debian systems
###############################################################################

# install dependencies for aircrack
sudo apt-get install openssl
sudo apt-get install libssl-dev
sudo apt-get install libnl-genl-3-200 libnl-genl-3-dev libnl-idiag-3-dev libnl-3-dev

# download aircrack
http://aircrack-ng.org/

# make and install aircrack
make && sudo make install

# dependencies for scapy
sudo apt-get install python-scapy
sudo apt-get install tcpdump


###############################################################################
# Further preparation (necessary for each session)
###############################################################################

TODO: put this in a config/setup-teardown script

# get <wlan-interface>
iwconfig

# put <wlan-interface> into monitoring mode
sudo airmon-ng start <wlan-interface>

# get <monitoring-interface>
iwconfig

# start dumping on the console (alternatively: run log.py)
sudo airodump-ng <monitoring-interface>

# when you are done, put <wlan-interface> back into normal mode
sudo airmon-ng stop <monitoring-interface>


###############################################################################
# First steps with the logger
###############################################################################

# Create a test database with some test data and view the result:
rm -f data/test.db && cat src/schema.sql src/insert_packet_types.sql src/insert_test_data.sql | sqlite3 data/test.db
cat src/select_test_packets_by_locations.sql | sqlite3 data/test.db

# Run the logger without parameters to see its help message:
python src/log.py
